import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { User, Mail, Phone, IdCard, Building, Briefcase, Shield, Calendar, CheckCircle, Clock, AlertTriangle, Edit, X, MapPin } from 'lucide-react';
import { formatDistanceToNow } from 'date-fns';
import { getRecentCheckIns } from '../lib/api/checkins';
import { getUserSchedules } from '../lib/api/schedules';
export function StaffDetail({ staff, onEdit, onClose }) {
    const [activeTab, setActiveTab] = useState('overview');
    // Fetch recent check-ins for this staff member
    const { data: recentCheckIns = [] } = useQuery({
        queryKey: ['recent-checkins', staff.id],
        queryFn: () => getRecentCheckIns(staff.organization_id, 20),
        select: (data) => data.filter(checkIn => checkIn.user_id === staff.id)
    });
    // Fetch schedules for this staff member
    const { data: userSchedules = [] } = useQuery({
        queryKey: ['user-schedules', staff.id],
        queryFn: () => getUserSchedules(staff.id)
    });
    const getRoleLabel = (role) => {
        switch (role) {
            case 'super_admin': return 'Super Admin';
            case 'admin': return 'Admin';
            case 'supervisor': return 'Supervisor';
            case 'worker': return 'Staff Member';
            default: return role;
        }
    };
    const getRoleBadgeColor = (role) => {
        switch (role) {
            case 'super_admin': return 'bg-purple-100 text-purple-800';
            case 'admin': return 'bg-blue-100 text-blue-800';
            case 'supervisor': return 'bg-green-100 text-green-800';
            case 'worker': return 'bg-gray-100 text-gray-800';
            default: return 'bg-gray-100 text-gray-800';
        }
    };
    const getStatusIcon = (status) => {
        switch (status) {
            case 'safe': return _jsx(CheckCircle, { className: "w-4 h-4 text-green-600" });
            case 'overdue': return _jsx(Clock, { className: "w-4 h-4 text-orange-600" });
            case 'missed': return _jsx(AlertTriangle, { className: "w-4 h-4 text-red-600" });
            case 'emergency': return _jsx(AlertTriangle, { className: "w-4 h-4 text-red-600" });
            default: return _jsx(Clock, { className: "w-4 h-4 text-gray-600" });
        }
    };
    const formatDateTime = (dateString) => {
        return new Date(dateString).toLocaleString();
    };
    const tabs = [
        { id: 'overview', label: 'Overview', icon: User },
        { id: 'checkins', label: 'Recent Check-ins', icon: CheckCircle },
        { id: 'schedules', label: 'Schedules', icon: Calendar },
    ];
    return (_jsxs("div", { className: "bg-white shadow rounded-lg overflow-hidden", children: [_jsx("div", { className: "px-6 py-4 border-b border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("div", { className: "w-12 h-12 bg-gray-300 rounded-full flex items-center justify-center", children: _jsxs("span", { className: "text-lg font-medium text-gray-700", children: [staff.first_name[0], staff.last_name[0]] }) }), _jsxs("div", { children: [_jsxs("h3", { className: "text-xl font-semibold text-gray-900", children: [staff.first_name, " ", staff.last_name] }), _jsxs("div", { className: "flex items-center space-x-2 mt-1", children: [_jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getRoleBadgeColor(staff.role)}`, children: getRoleLabel(staff.role) }), _jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${staff.is_active
                                                        ? 'bg-green-100 text-green-800'
                                                        : 'bg-red-100 text-red-800'}`, children: staff.is_active ? 'Active' : 'Inactive' })] })] })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("button", { onClick: onEdit, className: "inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary", children: [_jsx(Edit, { className: "w-4 h-4 mr-1" }), "Edit"] }), _jsx("button", { onClick: onClose, className: "p-2 text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100", children: _jsx(X, { className: "w-5 h-5" }) })] })] }) }), _jsx("div", { className: "border-b border-gray-200", children: _jsx("nav", { className: "-mb-px flex px-6", children: tabs.map((tab) => {
                        const Icon = tab.icon;
                        return (_jsxs("button", { onClick: () => setActiveTab(tab.id), className: `py-3 px-1 mr-8 border-b-2 font-medium text-sm flex items-center ${activeTab === tab.id
                                ? 'border-primary text-primary'
                                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`, children: [_jsx(Icon, { className: "w-4 h-4 mr-2" }), tab.label] }, tab.id));
                    }) }) }), _jsxs("div", { className: "p-6", children: [activeTab === 'overview' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsxs("h4", { className: "text-sm font-medium text-gray-900 mb-4 flex items-center", children: [_jsx(Mail, { className: "w-4 h-4 mr-2" }), "Contact Information"] }), _jsxs("div", { className: "grid grid-cols-1 gap-4 sm:grid-cols-2", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Mail, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Email" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.email || 'Not provided' })] })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Phone, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Phone" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.phone || 'Not provided' })] })] })] })] }), _jsxs("div", { children: [_jsxs("h4", { className: "text-sm font-medium text-gray-900 mb-4 flex items-center", children: [_jsx(Briefcase, { className: "w-4 h-4 mr-2" }), "Work Information"] }), _jsxs("div", { className: "grid grid-cols-1 gap-4 sm:grid-cols-2", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(IdCard, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Employee ID" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.employee_id || 'Not assigned' })] })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Briefcase, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Job Title" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.job_title || 'Not specified' })] })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Building, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Department" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.department || 'Not specified' })] })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Shield, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Role" }), _jsx("p", { className: "text-sm text-gray-600", children: getRoleLabel(staff.role) })] })] })] })] }), (staff.emergency_contact_name || staff.emergency_contact_phone) && (_jsxs("div", { children: [_jsxs("h4", { className: "text-sm font-medium text-gray-900 mb-4 flex items-center", children: [_jsx(Phone, { className: "w-4 h-4 mr-2" }), "Emergency Contact"] }), _jsxs("div", { className: "grid grid-cols-1 gap-4 sm:grid-cols-2", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(User, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Name" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.emergency_contact_name || 'Not provided' })] })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Phone, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Phone" }), _jsx("p", { className: "text-sm text-gray-600", children: staff.emergency_contact_phone || 'Not provided' })] })] })] })] })), _jsxs("div", { children: [_jsxs("h4", { className: "text-sm font-medium text-gray-900 mb-4 flex items-center", children: [_jsx(Calendar, { className: "w-4 h-4 mr-2" }), "Account Information"] }), _jsxs("div", { className: "grid grid-cols-1 gap-4 sm:grid-cols-2", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Calendar, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Created" }), _jsx("p", { className: "text-sm text-gray-600", children: formatDateTime(staff.created_at) })] })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Clock, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Last Updated" }), _jsx("p", { className: "text-sm text-gray-600", children: formatDateTime(staff.updated_at) })] })] }), staff.last_seen_at && (_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(User, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: "Last Seen" }), _jsx("p", { className: "text-sm text-gray-600", children: formatDateTime(staff.last_seen_at) })] })] }))] })] })] })), activeTab === 'checkins' && (_jsxs("div", { children: [_jsx("h4", { className: "text-lg font-medium text-gray-900 mb-4", children: "Recent Check-ins" }), recentCheckIns.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx(CheckCircle, { className: "mx-auto h-12 w-12 text-gray-400" }), _jsx("h3", { className: "mt-2 text-sm font-medium text-gray-900", children: "No check-ins yet" }), _jsx("p", { className: "mt-1 text-sm text-gray-500", children: "This staff member hasn't submitted any check-ins yet." })] })) : (_jsx("div", { className: "space-y-3", children: recentCheckIns.map((checkIn) => (_jsxs("div", { className: "border border-gray-200 rounded-lg p-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [getStatusIcon(checkIn.status), _jsxs("div", { children: [_jsxs("p", { className: "text-sm font-medium text-gray-900 capitalize", children: [checkIn.status, " Check-in"] }), _jsx("p", { className: "text-xs text-gray-500", children: formatDistanceToNow(new Date(checkIn.created_at), { addSuffix: true }) })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "text-sm text-gray-900", children: formatDateTime(checkIn.created_at) }), checkIn.location_address && (_jsxs("p", { className: "text-xs text-gray-500 flex items-center", children: [_jsx(MapPin, { className: "w-3 h-3 mr-1" }), checkIn.location_address] }))] })] }), checkIn.message && (_jsx("div", { className: "mt-2 pt-2 border-t border-gray-100", children: _jsx("p", { className: "text-sm text-gray-600", children: checkIn.message }) }))] }, checkIn.id))) }))] })), activeTab === 'schedules' && (_jsxs("div", { children: [_jsx("h4", { className: "text-lg font-medium text-gray-900 mb-4", children: "Assigned Schedules" }), userSchedules.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx(Calendar, { className: "mx-auto h-12 w-12 text-gray-400" }), _jsx("h3", { className: "mt-2 text-sm font-medium text-gray-900", children: "No schedules assigned" }), _jsx("p", { className: "mt-1 text-sm text-gray-500", children: "This staff member is not currently assigned to any schedules." })] })) : (_jsx("div", { className: "space-y-3", children: userSchedules.map((assignment) => (_jsx("div", { className: "border border-gray-200 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h5", { className: "text-sm font-medium text-gray-900", children: assignment.schedule.name }), assignment.schedule.description && (_jsx("p", { className: "text-sm text-gray-600 mt-1", children: assignment.schedule.description })), _jsxs("div", { className: "flex items-center space-x-4 mt-2 text-xs text-gray-500", children: [_jsxs("span", { children: ["Frequency: ", assignment.schedule.frequency] }), _jsxs("span", { children: ["Interval: ", assignment.schedule.check_in_interval_minutes, "min"] }), assignment.schedule.start_time && assignment.schedule.end_time && (_jsxs("span", { children: ["Time: ", assignment.schedule.start_time, " - ", assignment.schedule.end_time] }))] })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${assignment.schedule.is_active
                                                            ? 'bg-green-100 text-green-800'
                                                            : 'bg-gray-100 text-gray-800'}`, children: assignment.schedule.is_active ? 'Active' : 'Inactive' }), _jsxs("p", { className: "text-xs text-gray-500 mt-1", children: ["Assigned: ", formatDateTime(assignment.created_at)] })] })] }) }, assignment.id))) }))] }))] })] }));
}
